name: Smart CFL Stats Update (Game Day Aware)

on:
  schedule:
    # Daily baseline at 2 AM UTC
    - cron: '0 2 * * *'
    # Every 2 hours on typical game days (Thursday, Friday, Saturday)
    - cron: '0 0,2,4,6,8,10,12,14,16,18,20,22 * * 4,5,6'
    # Every 2 hours on Sunday (game day)
    - cron: '0 0,2,4,6,8,10,12,14,16,18,20,22 * * 0'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create public directory
      run: mkdir -p public
      
    - name: Fetch and write all stats (teams + players)
      run: node fetch-complete-stats.js
      
    - name: Copy landing page
      run: cp public/index.html public/index.html.bak 2>/dev/null || true
      
    - name: Validate generated files
      run: |
        echo "Checking for required files..."
        required_files=("all_teams_2025_stats.json" "team_wpg_2025_stats.json" "all_teams_2025_stats.xml" "team_wpg_2025_stats.xml" "all_players_2025_stats.json" "wpg_players_2025_stats.json")
        missing_files=()
        
        for file in "${required_files[@]}"; do
          if [ ! -f "public/$file" ]; then
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -gt 0 ]; then
          echo "❌ Missing required files: ${missing_files[*]}"
          exit 1
        else
          echo "✅ All required files present"
        fi
        
        echo "File sizes:"
        ls -lh public/*.json public/*.xml
        
        echo "Current run schedule:"
        echo "Daily at 2 AM UTC (baseline)"
        echo "Every 2 hours on Thu, Fri, Sat (game days)"
        echo "Every 2 hours on Sunday (game day)"
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './public'
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
